---
name: takelslim arm64

on:
  schedule: # run daily at midnight CET
    - cron:  '0 1 * * *'
  workflow_dispatch: # allow manual trigger

jobs:
  takelslim-arm64:
    runs-on: ubuntu-latest
    timeout-minutes: 1440
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Create randmac.py
        run: |
          cat << EOF > $HOME/randmac.py
          #!/usr/bin/env python3
          import random
          def randomMAC():
            return [ 0x00, 0x16, 0x3e,
            random.randint(0x00, 0x7f),
            random.randint(0x00, 0xff),
            random.randint(0x00, 0xff) ]
          def MACprettyprint(mac):
            return ':'.join(map(lambda x: "%02x" % x, mac))
          if __name__ == '__main__':
            print(MACprettyprint(randomMAC()))
          EOF

      - name: Create cloud init config
        run: |
          cat << EOF > $HOME/user-data
          #cloud-config
          password: ubuntu
          chpasswd: { expire: False }
          ssh_pwauth: True
          EOF

      - name: Create takelprepare
        run: |
          cat << EOF > $HOME/takelprepare.sh
          #!/usr/bin/env bash
          sudo mkdir -m 0755 -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo "deb [arch=arm64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu jammy stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get --yes install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin g++-aarch64-linux-gnu gcc-aarch64-linux-gnu make ruby ruby-dev
          sudo gem install takeltau
          sudo usermod -aG docker ubuntu
          EOF

      - name: Create takeldocker
        run: |
          cat << EOF > $HOME/takeldocker.sh
          #!/usr/bin/env bash
          # Configure tau
          echo "docker_entrypoint_options: --no-git --no-gopass --no-gpg --no-ssh" >> ~/.takelage.yml
          echo "docker_repo: takelbuild" >> ~/.takelage.yml
          echo "docker_tag: latest-arm64" >> ~/.takelage.yml
          cat ~/.takelage.yml
          # Pull takelage image
          tau update
          # Install mutagen
          wget --header="Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -O /tmp/mutagen.tar.gz https://github.com/mutagen-io/mutagen/releases/download/v`docker inspect --format '{{ index .Config.Labels "mutagen" }}' takelwerk/takelbuild:latest-arm64`/mutagen_linux_arm64_v`docker inspect --format '{{ index .Config.Labels "mutagen" }}' takelwerk/takelbuild:latest-arm64`.tar.gz; }
          sudo tar xvfz /tmp/mutagen.tar.gz -C /usr/local/bin
          mutagen daemon stop
          mutagen daemon start
          # Start an instance of takelage
          tau docker container daemon
          EOF

      - name: Create takelaction
        run: |
          cat << EOF > $HOME/takelaction.sh
          #!/usr/bin/env bash
          # Update debian base image
          tau docker container command "rake images:project:update"
          # Build image with packer
          tau docker container command "rake images:project:build"
          # Log in to dockerhub
          tau docker container command "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin"
          # Tag and push image
          tau docker container command "rake dockerhub:project:tag:latest:arm64"
          tau docker container command "rake dockerhub:project:push:latest:arm64"
          tau docker container command "rake dockerhub:project:tag:version:arm64"
          tau docker container command "rake dockerhub:project:push:version:arm64"
          # Pull amd64 images
          tau docker container command "rake dockerhub:project:pull:latest:amd64"
          tau docker container command "rake dockerhub:project:pull:version:amd64"
          # Create and push docker manifests
          tau docker container command "rake dockerhub:project:manifest:create:latest"
          tau docker container command "rake dockerhub:project:manifest:push:latest"
          tau docker container command "rake dockerhub:project:manifest:create:version"
          tau docker container command "rake dockerhub:project:manifest:push:version"
          EOF

      - name: Setup qemu vm
        run: |
          sudo apt-get --yes install cloud-image-utils qemu-system-arm qemu-efi sshpass
          cloud-localds $HOME/user-data.img $HOME/user-data
          cp /usr/share/AAVMF/AAVMF_CODE.fd $HOME/flash1.img
          wget http://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-arm64.img -O $HOME/jammy-server-cloudimg-arm64.img
          qemu-img resize $HOME/jammy-server-cloudimg-arm64.img +30G
          export RANDMAC=$(python3 $HOME/randmac.py)
          sudo qemu-system-aarch64 -daemonize -display none -m 1024 -cpu cortex-a57 -M virt -drive if=pflash,file=/usr/share/AAVMF/AAVMF_CODE.fd,format=raw -drive if=pflash,file=$HOME/flash1.img,format=raw -drive if=none,file=$HOME/jammy-server-cloudimg-arm64.img,id=hd0 -drive file=$HOME/user-data.img,format=raw -device virtio-blk-device,drive=hd0 -netdev type=user,id=net0,hostfwd=tcp::2222-:22 -device virtio-net-device,netdev=net0,mac=$RANDMAC
          until sshpass -p ubuntu ssh -p 2222 -o StrictHostKeyChecking=accept-new ubuntu@localhost true;do sleep 30; echo "Waiting for ssh..."; done

      - name: Copy repository to qemu vm
        run: |
          sshpass -p ubuntu scp -P 2222 -o StrictHostKeyChecking=accept-new -r * ubuntu@localhost:

      - name: Run takelprepare in qemu vm
        run: |
          sshpass -p ubuntu scp -P 2222 -o StrictHostKeyChecking=accept-new $HOME/takelprepare.sh ubuntu@localhost:
          sshpass -p ubuntu ssh -p 2222 -o StrictHostKeyChecking=accept-new ubuntu@localhost sh takelprepare.sh

      - name: Run takeldocker in qemu vm
        run: |
          sshpass -p ubuntu scp -P 2222 -o StrictHostKeyChecking=accept-new $HOME/takeldocker.sh ubuntu@localhost:
          sshpass -p ubuntu ssh -p 2222 -o StrictHostKeyChecking=accept-new ubuntu@localhost sh takeldocker.sh

      - name: Run takelaction in qemu vm
        run: |
          sshpass -p ubuntu scp -P 2222 -o StrictHostKeyChecking=accept-new $HOME/takelaction.sh ubuntu@localhost:
          sshpass -p ubuntu ssh -p 2222 -o StrictHostKeyChecking=accept-new ubuntu@localhost sh takelaction.sh
