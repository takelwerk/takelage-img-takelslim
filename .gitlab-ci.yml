default:
  image:
    name: takelwerk/takelbuild:latest-arm64
    entrypoint: ["/usr/bin/tail -f /dev/null"]
  services:
    - name: docker:dind
      command: [ "dockerd", "-H", "tcp://0.0.0.0:2375", "--tls=false" ]

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ''  # unset means: "unencrypted"

stages:
  - build

build-with-takelage:
  stage: build
  script:
    # Lint ruby
    - rake rubylint

    # Update debian base image
    - rake images:project:update

    # Build image with packer
    - rake images:project:build

    # Login to dockerhub
    - docker login --username takelwerk --password $DOCKERHUB_TOKEN

    # Tag and push image
    - rake dockerhub:project:tag:latest:arm64
    - rake dockerhub:project:push:latest:arm64
    - rake dockerhub:project:tag:version:arm64
    - rake dockerhub:project:push:version:arm64

    # Pull amd64 images
    - rake dockerhub:project:pull:latest:amd64
    - rake dockerhub:project:pull:version:amd64

    # Create and push docker manifests
    - rake dockerhub:project:manifest:create:latest
    - rake dockerhub:project:manifest:push:latest
    - rake dockerhub:project:manifest:create:version
    - rake dockerhub:project:manifest:push:version

build-with-debian-and-takelage:
  stage: build
  rules:
    - when: never
  script:
    # Install docker and ruby
    - apt-get update
    - apt-get --yes install curl gpg
    - mkdir -m 0755 -p /etc/apt/keyrings
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    - echo 'deb [arch=arm64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian bookworm stable' >> /etc/apt/sources.list.d/docker.list
    - apt-get update
    - apt-get --yes install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin g++-aarch64-linux-gnu gcc-aarch64-linux-gnu make ruby ruby-dev wget

    # Install and configure tau
    # Single quotes work around gitlab colon+space yaml problem
    - gem install takeltau
    - 'echo "docker_entrypoint_options: --no-git --no-gopass --no-gpg --no-ssh" >> ~/.takelage.yml'
    - 'echo "docker_repo: takelbuild" >> ~/.takelage.yml'
    - 'echo "docker_tag: latest-arm64" >> ~/.takelage.yml'
    - 'echo "cmd_docker_container_create: docker run --detach --env TAKELAGE_PROJECT_BASE_DIR=%{workdir} --env TZ=%{timezone} --env DOCKER_HOST=tcp://localhost:2375 --env DOCKER_TLS_CERTDIR=$DOCKER_TLS_CERTDIR --env DOCKER_TLS_VERIFY=$DOCKER_TLS_VERIFY --hostname %{container} --name %{container} --network %{container} --rm --shm-size %{shmsize} --tty --volume %{homedir}:/hostdir --volume %{workdir}:/project %{volume_dev} --workdir /project %{docker_run_options} %{image} %{entrypoint} --gid %{gid} --home %{homedir} --uid %{uid} --username %{username} --extra=%{extra} %{entrypoint_options}" >> ~/.takelage.yml'
    - 'echo "cmd_mutagen_forward_socket_docker: mutagen forward create --name=%{socketname} --label=%{hostlabel} --label=%{takellabel} --socket-group-source=docker --socket-permission-mode=0660 docker://root@%{container}:tcp:localhost:2375 tcp:localhost:2375" >> ~/.takelage.yml'

    # Pull takelage image
    - tau update

    # Install mutagen
    - export MUTAGEN=$(docker inspect --format '{{ index .Config.Labels "mutagen" }}' takelwerk/takelbuild:latest-arm64)
    - export MUTAGEN_FILE=https://github.com/mutagen-io/mutagen/releases/download/v$MUTAGEN/mutagen_linux_arm64_v$MUTAGEN.tar.gz
    - wget -O /tmp/mutagen.tar.gz $MUTAGEN_FILE
    - tar xvfz /tmp/mutagen.tar.gz -C /usr/local/bin
    - mutagen daemon start
    - export USER=root

    # Start an instance of takelage
    - tau docker container daemon

    # Lint ruby
    - rake rubylint"

    # Update debian base image
    - rake images:project:update"

    # Build image with packer
    - rake images:project:build"

    # Login to dockerhub
    - docker login --username takelwerk --password $DOCKERHUB_TOKEN"

    # Tag and push image
    - rake dockerhub:project:tag:latest:arm64"
    - rake dockerhub:project:push:latest:arm64"
    - rake dockerhub:project:tag:version:arm64"
    - rake dockerhub:project:push:version:arm64"

    # Pull amd64 images
    - rake dockerhub:project:pull:latest:amd64"
    - rake dockerhub:project:pull:version:amd64"

    # Create and push docker manifests
    - rake dockerhub:project:manifest:create:latest"
    - rake dockerhub:project:manifest:push:latest"
    - rake dockerhub:project:manifest:create:version"
    - rake dockerhub:project:manifest:push:version"
